q1

a:
=======================================================================================================================

*Note: For vector2 I used 10000000 as time since it takes too long to finish.

Task number:          1 (time: 20000000)*    2 (time: 20000000)*    4 (time: 20000000)*

DARRAY                1.82u  0:01.82         26.89u  0:13.50        98.38u  0:24.89
VECTOR1               2.49u  0:02.50         18.53u  0:09.30        128.69u 0:32.92
VECTOR2               6.25u  0:06.25         97.16u  0:48.77        311.95u 1:18.12
STACK                 1.21u  0:01.20         2.39u   0:01.24        4.69u   0:01.24

=======================================================================================================================

b:

*Note: For vector2 I used 10000000 as time since it takes too long to finish.

Task number:          1 (time: 20000000)    2 (time: 20000000)              4 (time: 20000000)

DARRAY                1.82u  0:01.82        +25.07u +1377%  +11.68  +641%   +71.49u  +265%  +11.39 +84%
VECTOR1               2.49u  0:02.50        +16.04u +644%   +6.8    +272%   +110.16u +594%  +23.62 +253%
VECTOR2               6.25u  0:06.25        +90.9u  +1454%  +42.52  +680%   +214.79u +221%  +29.35 +60%
STACK                 1.21u  0:01.20        +1.18u  +97%    +0.04   +3%     +2.57u   +107%  +0     +0%


=======================================================================================================================

c:

Stack always has the best performance. The user time doubles as the task number double but the real time remains the
same since the user time is relatively small. The stack approach do not require dynamic allocation and it always run
faster than other approach.

The vector1 is always faster than vector2 because the size is given when we allocate space in the vector1. As for
the vector2, the vector size increase while we push back element, which means there will be multiple time that the
vector space is full and we need to allocate more space, which makes it really slow.

The DARRAY is faster than vector approach but still slower than STACK, since it is using array but it allocate the
space on the heap, which makes it slower than the STACK approach.
